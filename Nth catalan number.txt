import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
class GFG
 {
     
	 public static void main (String[] args) throws IOException
	 {
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 StringBuffer sb=new StringBuffer();
	 int T=Integer.parseInt(br.readLine());
	 while(T-->0)
	 {
	     int n=Integer.parseInt(br.readLine().trim());
	     BigInteger[] dp = new BigInteger[n+1];
	     sb.append(catalan(n,dp)+"\n");
	 }
	 System.out.print(sb);
	 }
	 public static BigInteger catalan(int n,BigInteger[] dp)
	 {
	     if(dp[n]!=null)
	     {
	         return dp[n];
	     }
	     if(n==1 || n==0)
	     {
	         return new BigInteger("1");
	     }
	     BigInteger ans=new BigInteger("0");
	     for(int i=1;i<=n;i++)
	     {
	         ans=ans.add(catalan(i-1,dp).multiply(catalan(n-i,dp)));
	     }
	     return dp[n]=ans;
	 }
}