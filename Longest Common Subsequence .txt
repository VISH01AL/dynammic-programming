import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
     
	 public static void main (String[] args) throws IOException
	 {
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 StringBuffer sb=new StringBuffer();
	 int T=Integer.parseInt(br.readLine());
	 while(T-->0)
	 {
	     String[] s=br.readLine().split("\\s");
	     int s1len=Integer.parseInt(s[0]);
	     int s2len=Integer.parseInt(s[1]);
	     String s1=br.readLine(),s2=br.readLine();
	     char[] c1=s1.toCharArray();
	     char[] c2=s2.toCharArray();
	     int[][] dp=new int[s1len][s2len];
	     for(int[] x:dp)
	     {
	         Arrays.fill(x,-1);
	     }
	     sb.append(lcs(c1,c2,s1len-1,s2len-1,dp)+"\n");
	 }
	 System.out.print(sb);
	 }
	 public static int lcs(char[] c1,char[] c2,int m,int n,int[][] dp)
	 {
	     if(m<0 || n<0)
	     {
	         return 0;
	     }
	     if(dp[m][n]!=-1)
	     {
	         return dp[m][n];
	     }
	     else if(c1[m]==c2[n])
	     {
	         return dp[m][n]=1+lcs(c1,c2,m-1,n-1,dp);
	     }
	     else{
	         return dp[m][n]=Math.max(lcs(c1,c2,m-1,n,dp),lcs(c1,c2,m,n-1,dp));
	     }
	 }
}