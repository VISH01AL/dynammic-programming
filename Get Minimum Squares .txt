import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	 public static void main (String[] args) throws IOException
	 {
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 StringBuffer sb=new StringBuffer();
	 int T=Integer.parseInt(br.readLine());
	 while(T-->0)
	 {
	     int n=Integer.parseInt(br.readLine());
	     int alen=(int)Math.sqrt(n);
	     int[] arr=new int[alen+1];
	     for(int i=1;i<=alen;i++)
	     {
	         arr[i]=i*i;
	     }
	     int[][] dp=new int [arr.length+1][n+1];
	     for(int i=0;i<arr.length+1;i++)
	     {
	         for(int j=0;j<n+1;j++)
	         {
	             dp[i][j]=-1;
	         }
	     }
	    sb.append(minimumsquare(n,arr,1,dp)+"\n");
	 }
	 System.out.print(sb);
	 }
	 public static int minimumsquare(int n,int[] arr,int i,int[][] dp)
    {
        if(i==arr.length)
        {
            return Integer.MAX_VALUE;
        }
        if(n==0)
        {
            return 0;
        }
        if(dp[i][n]!=-1)
        {
            return dp[i][n];
        }
        int smallans1=Integer.MAX_VALUE,smallans2=Integer.MAX_VALUE;
        if(n-arr[i]>=0)
        {
            smallans1=minimumsquare(n-arr[i],arr,i,dp);
            if(smallans1!=Integer.MAX_VALUE)
            {
                smallans1+=1;
            }
        }
        smallans2=minimumsquare(n,arr,i+1,dp);
        return dp[i][n]=Math.min(smallans1,smallans2);
    }
    
}