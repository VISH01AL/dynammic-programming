import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	 public static void main (String[] args) throws IOException
	 {
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 StringBuffer sb=new StringBuffer();
	 int T=Integer.parseInt(br.readLine());
	 while(T-->0)
	 {
	     int n=Integer.parseInt(br.readLine());
	     String[] s=br.readLine().split("\\s");
	     int[] arr=new int[n];
	     int[] incsum=new int[n];
	     int[] decsum=new int[n];
	     for(int i=0;i<n;i++)
	     {
	         arr[i]=Integer.parseInt(s[i]);
	     }
	    increase(arr,incsum,0);
	    decrease(arr,decsum,n-1);
	   
	    int max=0;
	    for(int i=0;i<n;i++)
	    {
	        int temp=incsum[i]+decsum[i]-arr[i];
	        if(max<temp)
	        {
	            max=temp;
	        }
	    }
	     sb.append(max+"\n");
	 }
	 System.out.print(sb);
	 }
	 public static void increase(int[] arr,int[] incsum,int i)
	 {
	     if(i==arr.length)
	     {
	         return;
	     }
	     int max=arr[i];
	     for(int j=0;j<i;j++)
	     {
	         if(arr[j]<arr[i])
	         {
	             max=Math.max(incsum[j]+arr[i],max);
	         }
	     }
	     incsum[i]=max;
	     increase(arr,incsum,i+1);
	 }
	 public static void decrease(int[] arr,int[] decsum,int i)
	 {
	     if(i<0)
	     {
	         return;
	     }
	     int max=arr[i];
	     for(int j=arr.length-1;j>=i;j--)
	     {
	         if(arr[j]<arr[i])
	         {
	             max=Math.max(decsum[j]+arr[i],max);
	         }
	     }
	     decsum[i]=max;
	     decrease(arr,decsum,i-1);
	 }
	 
}