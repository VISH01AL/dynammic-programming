import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	 public static void main (String[] args) throws IOException
	 {
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 StringBuffer sb=new StringBuffer();
	 int T=Integer.parseInt(br.readLine());
	 while(T-->0)
	 {
	     int total=Integer.parseInt(br.readLine().trim());
	     String[] s=br.readLine().trim().split("\\s");
	     int[] arr=new int[3];
	     for(int i=0;i<arr.length;i++)
	         arr[i]=Integer.parseInt(s[i]);
	     int[][] dp=new int[total+1][arr.length];
	     for(int[] x:dp)
	        Arrays.fill(x,-1);
	     sb.append(maxcuts(arr,total,arr.length-1,dp)+"\n");
	 }
	 System.out.print(sb);
	 }
	 public static int maxcuts(int[] arr,int total,int i,int[][] dp)
	 {
	     if(i<0 || total<0)
	         return Integer.MIN_VALUE;
	     if(dp[total][i]!=-1)
	         return dp[total][i];
	     if(total==0)
	         return 0;
	     int smalloutput1=0,smalloutput2=0;
	     smalloutput1=1+maxcuts(arr,total-arr[i],i,dp);
	     smalloutput2=maxcuts(arr,total,i-1,dp);
	     return dp[total][i]=Math.max(smalloutput1,smalloutput2);
	 }
}